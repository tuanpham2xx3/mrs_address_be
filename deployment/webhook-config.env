# Webhook Server Configuration for Vietnam Admin API
# This file shows the environment variables needed on the webhook server
# to deploy this project according to webhook.md specification

# ============================================================================
# WEBHOOK SERVER CONFIGURATION
# ============================================================================

# For repository owner/vietnam-admin-api (replace with your actual repo name)
# Format: DEPLOY_COMMANDS_{OWNER}_{REPO_NAME}={commands separated by semicolons}
# Format: WORK_DIR_{OWNER}_{REPO_NAME}={working directory path}

# === PRODUCTION ENVIRONMENT ===
# For standard deployment (change /opt to /home/deploy for Debian)
DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API=cd /home/deploy/vietnam-admin-api;git pull origin main;docker-compose down;docker-compose pull;docker-compose up -d --build;docker system prune -f
WORK_DIR_OWNER_VIETNAM_ADMIN_API=/home/deploy/vietnam-admin-api

# === STAGING ENVIRONMENT ===
# For staging deployment (change /opt to /home/deploy for Debian)
DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API_STAGING=cd /home/deploy/vietnam-admin-api-staging;git pull origin develop;docker-compose -f docker-compose.staging.yml down;docker-compose -f docker-compose.staging.yml pull;docker-compose -f docker-compose.staging.yml up -d --build;docker system prune -f
WORK_DIR_OWNER_VIETNAM_ADMIN_API_STAGING=/home/deploy/vietnam-admin-api-staging

# ============================================================================
# ALTERNATIVE DEPLOYMENT STRATEGIES
# ============================================================================

# === STRATEGY 1: Go Binary Deployment ===
# DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API=cd /opt/vietnam-admin-api;git pull origin main;go mod tidy;go test ./...;go build -o vietnam-admin-api;sudo systemctl restart vietnam-admin-api
# WORK_DIR_OWNER_VIETNAM_ADMIN_API=/opt/vietnam-admin-api

# === STRATEGY 2: Docker without Compose ===
# DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API=cd /opt/vietnam-admin-api;git pull origin main;docker build -t vietnam-admin-api:latest .;docker stop vietnam-admin-api || true;docker rm vietnam-admin-api || true;docker run -d --name vietnam-admin-api -p 8100:8100 vietnam-admin-api:latest
# WORK_DIR_OWNER_VIETNAM_ADMIN_API=/opt/vietnam-admin-api

# === STRATEGY 3: Docker with Registry ===
# DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API=cd /opt/vietnam-admin-api;docker pull ghcr.io/owner/vietnam-admin-api:latest;docker-compose down;docker-compose up -d
# WORK_DIR_OWNER_VIETNAM_ADMIN_API=/opt/vietnam-admin-api

# === STRATEGY 4: Kubernetes Deployment ===
# DEPLOY_COMMANDS_OWNER_VIETNAM_ADMIN_API=cd /opt/vietnam-admin-api;git pull origin main;kubectl apply -f k8s/;kubectl rollout restart deployment/vietnam-admin-api
# WORK_DIR_OWNER_VIETNAM_ADMIN_API=/opt/vietnam-admin-api

# ============================================================================
# WEBHOOK SERVER GENERAL CONFIGURATION
# ============================================================================

# GitHub webhook secret (must match the secret configured in GitHub)
WEBHOOK_SECRET=du_an_cua_tuan

# Server port (webhook server running on 8300)
PORT=8300

# Cloudflare tunnel configuration (if using)
# CLOUDFLARE_TUNNEL_TOKEN=your_cloudflare_tunnel_token

# ============================================================================
# DEPLOYMENT DIRECTORIES SETUP
# ============================================================================

# Commands to create the deployment directories:
# sudo mkdir -p /opt/vietnam-admin-api
# sudo mkdir -p /opt/vietnam-admin-api-staging
# sudo chown -R $USER:$USER /opt/vietnam-admin-api
# sudo chown -R $USER:$USER /opt/vietnam-admin-api-staging

# Clone the repository:
# git clone https://github.com/owner/vietnam-admin-api.git /opt/vietnam-admin-api
# git clone https://github.com/owner/vietnam-admin-api.git /opt/vietnam-admin-api-staging

# Setup staging branch:
# cd /opt/vietnam-admin-api-staging
# git checkout -b develop origin/develop

# ============================================================================
# DOCKER COMPOSE CONFIGURATION
# ============================================================================

# For production deployment, ensure docker-compose.yml is configured properly:
# - Ports: 8100:8100
# - Environment variables
# - Health checks
# - Restart policies

# For staging deployment, create docker-compose.staging.yml:
# - Different ports (e.g., 8101:8100)
# - Staging-specific environment variables
# - Different container names

# ============================================================================
# SYSTEMD SERVICE (if using binary deployment)
# ============================================================================

# Create systemd service file: /etc/systemd/system/vietnam-admin-api.service
# [Unit]
# Description=Vietnam Admin API Service
# After=network.target
# 
# [Service]
# Type=simple
# User=deploy
# WorkingDirectory=/opt/vietnam-admin-api
# ExecStart=/opt/vietnam-admin-api/vietnam-admin-api
# Restart=always
# RestartSec=3
# Environment=GIN_MODE=release
# Environment=PORT=8100
# Environment=DATA_PATH=/opt/vietnam-admin-api/data
# 
# [Install]
# WantedBy=multi-user.target

# Enable and start the service:
# sudo systemctl daemon-reload
# sudo systemctl enable vietnam-admin-api
# sudo systemctl start vietnam-admin-api

# ============================================================================
# NGINX CONFIGURATION (if using reverse proxy)
# ============================================================================

# Add to nginx configuration:
# server {
#     listen 80;
#     server_name api.vietnam-admin.your-domain.com;
#     
#     location / {
#         proxy_pass http://localhost:8100;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# ============================================================================
# HEALTH CHECK ENDPOINTS
# ============================================================================

# The application should provide health check endpoints:
# GET /health - Basic health check
# GET /health/ready - Readiness check
# GET /health/live - Liveness check

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Configure logging for the webhook server to track deployments:
# - Deployment start/end times
# - Success/failure status
# - Git commit information
# - Error details

# Log rotation configuration:
# /var/log/webhook-server/*.log {
#     daily
#     rotate 30
#     compress
#     delaycompress
#     missingok
#     notifempty
#     copytruncate
# } 