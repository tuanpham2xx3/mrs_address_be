name: Webhook Deployment

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy via Webhook
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV
            echo "WORK_DIR=/opt/vietnam-admin-api" >> $GITHUB_ENV
          else
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
            echo "WORK_DIR=/opt/vietnam-admin-api-staging" >> $GITHUB_ENV
          fi

      - name: Deploy via Webhook
        run: |
          # Create webhook payload (compact format like test script)
          cat > webhook_payload_raw.json << EOF
          {
            "ref": "${{ github.ref }}",
            "repository": {
              "name": "${{ github.event.repository.name }}",
              "full_name": "${{ github.repository }}",
              "html_url": "${{ github.event.repository.html_url }}",
              "clone_url": "${{ github.event.repository.clone_url }}",
              "default_branch": "${{ github.event.repository.default_branch }}"
            },
            "pusher": {
              "name": "${{ github.actor }}",
              "email": "${{ github.actor }}@users.noreply.github.com"
            },
            "head_commit": {
              "id": "${{ github.sha }}",
              "message": "${{ github.event.head_commit.message }}",
              "timestamp": "${{ github.event.head_commit.timestamp }}",
              "url": "${{ github.event.head_commit.url }}",
              "author": {
                "name": "${{ github.event.head_commit.author.name }}",
                "email": "${{ github.event.head_commit.author.email }}"
              }
            },
            "deployment": {
              "environment": "${{ env.DEPLOY_ENV }}",
              "image_tag": "${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}-${{ github.sha }}",
              "container_name": "vietnam-admin-api-${{ env.DEPLOY_ENV }}"
            }
          }
          EOF
          
          # Convert to compact JSON (no whitespace)
          cat webhook_payload_raw.json | jq -c . > webhook_payload.json
          
          # Debug payload
          echo "=== DEBUG PAYLOAD ==="
          cat webhook_payload.json
          echo ""
          echo "====================="
          
          # Generate HMAC SHA256 signature (matching test script)
          WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}"
          SIGNATURE="sha256=$(cat webhook_payload.json | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" | cut -d' ' -f2)"
          
          echo "Generated signature: $SIGNATURE"
          
          # Send webhook request (matching test script headers)
          RESPONSE=$(curl -w "\n%{http_code}" -X POST https://webhook1.iceteadev.site/deploy \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: $SIGNATURE" \
            -H "X-Github-Event: push" \
            -H "X-Github-Delivery: ${{ github.run_id }}-${{ github.run_number }}" \
            -H "User-Agent: GitHub-Hookshot/${{ github.run_id }}" \
            -d @webhook_payload.json)
          
          # Parse response
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n -1)
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response Body: $BODY"
          
          # Check if request was successful
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "✅ Webhook deployment successful!"
            echo "Environment: ${{ env.DEPLOY_ENV }}"
            echo "Repository: ${{ github.repository }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "Commit: ${{ github.sha }}"
          else
            echo "❌ Webhook deployment failed!"
            echo "HTTP Status: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Wait for deployment
        run: |
          echo "⏳ Waiting for deployment to complete..."
          sleep 30
          
          # Test if the service is running (adjust URL as needed)
          if [ "${{ env.DEPLOY_ENV }}" == "production" ]; then
            HEALTH_URL="https://api.vietnam-admin.your-domain.com/health"
          else
            HEALTH_URL="https://staging-api.vietnam-admin.your-domain.com/health"
          fi
          
          # Try to reach the health endpoint
          for i in {1..10}; do
            echo "Health check attempt $i..."
            if curl -f -s "$HEALTH_URL" > /dev/null; then
              echo "✅ Service is healthy!"
              break
            else
              echo "⏳ Service not ready yet, waiting..."
              sleep 30
            fi
            
            if [ $i -eq 10 ]; then
              echo "⚠️ Service health check failed after 10 attempts"
              echo "This might be expected if health endpoint is not configured"
            fi
          done

      - name: Deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ env.DEPLOY_ENV }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Working Directory**: ${{ env.WORK_DIR }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Time**: $(date)" >> $GITHUB_STEP_SUMMARY 